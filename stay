#!/bin/bash

function startapp() {
	# - docker rmi -f stay:app
	docker rm -f stayapp 2> /dev/null
	echo "Shutting down existing application..."
	PORT=8080
	DEBUG=True
	DB_HOST=cs4750.cs.virginia.edu
	DB_NAME=tl2rb
	DB_USERNAME=tl2rb_a
	JWT_SECRET=ljqLOhWzypKDhnejuiUeslqDlFYOSxiKRKD29oif9U8
	for e in ${@:3}
	do
		case $e in
			--port=*)
				PORT="${e#*=}"
				shift
				;;
			--debug=*)
				DEBUG="${e#*=}"
				shift
				;;
			--dbhost=*)
				DB_HOST="${e#*=}"
				shift
				;;
			--dbname=*)
				DB_NAME="${e#*=}"
				shift
				;;
			--dbuser=*)
				DB_USERNAME="${e#*=}"
				shift
				;;
			--dbpass=*)
				DB_PASSWORD="${e#*=}"
				shift
				;;
			--jwtsecret=*)
				JWT_SECRET="${e#*=}"
				shift
				;;
		esac
	done
	if [ -z "${DB_PASSWORD}" ]
	then
	      echo "Database password is not set. Set it with --dbpass"
	      exit 1
	fi
	docker build -f Dockerfile.app . --tag stay:app
	docker run --name stayapp -p ${PORT}:8000 -e DB_HOST=${DB_HOST} -e DB_NAME=${DB_NAME} -e DB_USERNAME=${DB_USERNAME} -e DB_PASSWORD=${DB_PASSWORD} -e DEBUG=${DEBUG} -e JWT_SECRET=${JWT_SECRET} -d stay:app
	echo "Running application on localhost:${PORT}"
}

function startdebug() {
	HOST=127.0.0.1
	PORT=5000
	DEBUG=True
	DB_HOST=cs4750.cs.virginia.edu
	DB_NAME=tl2rb
	DB_USERNAME=tl2rb_a
	JWT_SECRET=ljqLOhWzypKDhnejuiUeslqDlFYOSxiKRKD29oif9U8
	for e in ${@:3}
	do
		case $e in
			--host=*)
				HOST="${e#*=}"
				shift
				;;
			--port=*)
				PORT="${e#*=}"
				shift
				;;
			--debug=*)
				DEBUG="${e#*=}"
				shift
				;;
			--dbhost=*)
				DB_HOST="${e#*=}"
				shift
				;;
			--dbname=*)
				DB_NAME="${e#*=}"
				shift
				;;
			--dbuser=*)
				DB_USERNAME="${e#*=}"
				shift
				;;
			--dbpass=*)
				DB_PASSWORD="${e#*=}"
				shift
				;;
			--jwtsecret=*)
				JWT_SECRET="${e#*=}"
				shift
				;;
		esac
	done
	if [ -z "${DB_PASSWORD}" ]
	then
	      echo "Database password is not set. Set it with --dbpass"
	      exit 1
	fi
	JWT_SECRET=${JWT_SECRET} FLASK_DEBUG=1 DEBUG=${DEBUG} DB_HOST=${DB_HOST} DB_NAME=${DB_NAME} DB_USERNAME=${DB_USERNAME} DB_PASSWORD=${DB_PASSWORD} flask run -h ${HOST} -p ${PORT}
}

function start() {
	case $2 in
		app)
			startapp $@
			;;
		debug)
			startdebug $@
			;;
	esac
}

function stop() {
	case $2 in
		app)
			docker rm -f stayapp 2> /dev/null
			;;
	esac
}

function test() {
	echo test $2
}

function deploy() {
	## Run the command below to remove the image with the tag
	## 'stay:prod'from your system. I left it out here so that
	## local builds are faster.
	# docker rmi -f stay:prod

	# Remove running container. '-' prefix indicates that it's okay
	# if the command produces an error, i.e. there is no running
	# container with the name 'stay'.
	docker rm -f stay

	# Build the image with the Dockerfile in the current directory,
	# and tag it with 'stay:prod'.
	docker build -f Dockerfile.app . --tag stay:prod

	# Tag the local 'stay:prod' image into the smasher164 repository.
	docker tag stay:prod smasher164/stay:prod

	# Push the tagged image to the docker hub registry.
	docker push smasher164/stay:prod

	# SSH into VM, pull down the image, and restart the service.
	ssh core@akhil.cc "docker pull smasher164/stay:prod && sudo systemctl restart stay"
}

case $1 in
	start)
		start $@
		;;
	stop)
		stop $@
		;;
	test)
		test $@
		;;
	deploy)
		deploy $@
		;;
esac
